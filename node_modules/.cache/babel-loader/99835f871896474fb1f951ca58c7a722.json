{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stevis\\\\Desktop\\\\Dev\\\\React\\\\2.reactagain\\\\Projects\\\\food-order-app\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.payload.price * action.payload.amount;\n    const existingCartItemIndex = state.items.findIndex(item => {\n      return item.id === action.payload.id;\n    });\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.payload.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.payload);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => {\n      return item.id === action.payload;\n    });\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => {\n        return item.id !== action.payload;\n      });\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n    }\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      payload: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      payload: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Stevis/Desktop/Dev/React/2.reactagain/Projects/food-order-app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","payload","price","amount","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.payload.price * action.payload.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex((item) => {\r\n      return item.id === action.payload.id;\r\n    });\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.payload.amount,\r\n      };\r\n\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.payload);\r\n    }\r\n\r\n    return { items: updatedItems, totalAmount: updatedTotalAmount };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    const existingCartItemIndex = state.items.findIndex((item) => {\r\n      return item.id === action.payload;\r\n    });\r\n\r\n    const existingItem = state.items[existingCartItemIndex];\r\n\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n\r\n    let updatedItems;\r\n\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => {\r\n        return item.id !== action.payload;\r\n      });\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n    }\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", payload: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", payload: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}