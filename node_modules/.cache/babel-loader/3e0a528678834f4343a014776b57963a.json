{"ast":null,"code":"import _slicedToArray from\"C:/Users/Stevis/Desktop/food-order-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"C:/Users/Stevis/Desktop/food-order-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/Stevis/Desktop/food-order-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useReducer}from\"react\";import CartContext from\"./cart-context\";import{jsx as _jsx}from\"react/jsx-runtime\";var defaultCartState={items:[],totalAmount:0};var cartReducer=function cartReducer(state,action){if(action.type===\"ADD\"){var updatedTotalAmount=state.totalAmount+action.payload.price*action.payload.amount;var existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.payload.id;});var existingCartItem=state.items[existingCartItemIndex];var updatedItems;if(existingCartItem){var updatedItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount+action.payload.amount});updatedItems=_toConsumableArray(state.items);updatedItems[existingCartItemIndex]=updatedItem;}else{updatedItems=state.items.concat(action.payload);}return{items:updatedItems,totalAmount:updatedTotalAmount};}if(action.type===\"REMOVE\"){var _existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.payload;});var existingItem=state.items[_existingCartItemIndex];var _updatedTotalAmount=state.totalAmount-existingItem.price;var _updatedItems;if(existingItem.amount===1){_updatedItems=state.items.filter(function(item){return item.id!==action.payload;});}else{var _updatedItem=_objectSpread(_objectSpread({},existingItem),{},{amount:existingItem.amount-1});_updatedItems=_toConsumableArray(state.items);_updatedItems[_existingCartItemIndex]=_updatedItem;}return{items:_updatedItems,totalAmount:_updatedTotalAmount};}return defaultCartState;};var CartProvider=function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAction=_useReducer2[1];var addItemToCartHandler=function addItemToCartHandler(item){dispatchCartAction({type:\"ADD\",payload:item});};var removeItemFromCartHandler=function removeItemFromCartHandler(id){dispatchCartAction({type:\"REMOVE\",payload:id});};var cartContext={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItemToCartHandler,removeItem:removeItemFromCartHandler};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});};export default CartProvider;","map":{"version":3,"sources":["C:/Users/Stevis/Desktop/food-order-app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","payload","price","amount","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.payload.price * action.payload.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex((item) => {\r\n      return item.id === action.payload.id;\r\n    });\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.payload.amount,\r\n      };\r\n\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.payload);\r\n    }\r\n\r\n    return { items: updatedItems, totalAmount: updatedTotalAmount };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    const existingCartItemIndex = state.items.findIndex((item) => {\r\n      return item.id === action.payload;\r\n    });\r\n\r\n    const existingItem = state.items[existingCartItemIndex];\r\n\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n\r\n    let updatedItems;\r\n\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => {\r\n        return item.id !== action.payload;\r\n      });\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", payload: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", payload: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}